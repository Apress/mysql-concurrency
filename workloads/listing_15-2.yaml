--- # Listing 15-2. Triggering InnoDB record lock contention
name:        Listing 15-2
description: Triggering InnoDB record lock contention
connections: 2
queries:
  - connection:  1
    sql:         START TRANSACTION
  - connection:  1
    sql: |
      UPDATE world.city
         SET Population = 5000000
       WHERE ID = 130
  - connection:  2
    sql:         SET SESSION innodb_lock_wait_timeout = 3600
  - connection:  2
    sql:         START TRANSACTION
  - connection:  2
    sql:         UPDATE world.city SET Population = Population * 1.10 WHERE CountryCode = 'AUS'
    wait:        No
completions:
  - connection:  1
    sql:         ROLLBACK
  - connection:  2
    sql:         ROLLBACK
investigations:
  - sql:         SELECT * FROM sys.innodb_lock_waits
    format:      vertical
  - sql: |
      SELECT thd_id, conn_id, state,
             current_statement,
             statement_latency
        FROM sys.session
       WHERE thd_id IN ({thread_ids})
  - sql: |
      SELECT *
        FROM performance_schema.data_locks
       WHERE thread_id IN ({thread_ids})
    format:      vertical
  - sql: |
      SELECT *
        FROM performance_schema.data_lock_waits
       WHERE requesting_thread_id IN ({thread_ids})
    format:      vertical
  - sql: |
      SELECT object_type, object_schema, object_name,
             lock_type, lock_duration, lock_status,
             owner_thread_id
        FROM performance_schema.metadata_locks
       WHERE owner_thread_id IN ({thread_ids})
